package com.aimir.fep.protocol.fmp.frame.service.entry;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;

import com.aimir.fep.protocol.fmp.datatype.*;
import com.aimir.fep.protocol.fmp.frame.service.Entry;

/**
 * codiMemoryEntry
 * generated by MIB Tool, Do not modify
 *
 * @author Y.S Kim (sorimo@nuritelecom.com)
 * @version $Rev: 1 $, $Date: 2005-11-21 15:59:15 +0900 $,
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="codiMemoryEntry">
 *   &lt;complexContent>
 *     &lt;extension base="{http://server.ws.command.fep.aimir.com/}entry">
 *       &lt;sequence>
 *         &lt;element name="codiBindingTableSize" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="codiTempBindingEntries" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="codiNeighborTableSize" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="codiTCAddressCasheSize" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="codiRouteTableSize" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="codiMaxHops" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="codiPacketBufferCount" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "codiMemoryEntry", propOrder = {
    "codiBindingTableSize",
    "codiTempBindingEntries",
    "codiNeighborTableSize",
    "codiTCAddressCasheSize",
    "codiRouteTableSize",
    "codiMaxHops",
    "codiPacketBufferCount"
})
public class codiMemoryEntry extends Entry {
    public BYTE codiBindingTableSize = 
            new BYTE();
    public BYTE codiTempBindingEntries = 
            new BYTE();
    public BYTE codiNeighborTableSize = 
            new BYTE();
    public BYTE codiTCAddressCasheSize = 
            new BYTE();
    public BYTE codiRouteTableSize = 
            new BYTE();
    public BYTE codiMaxHops = 
            new BYTE();
    public BYTE codiPacketBufferCount = 
            new BYTE();

    @XmlTransient
    public BYTE getCodiBindingTableSize()
    {
        return this.codiBindingTableSize;
    } 

    public void setCodiBindingTableSize(BYTE codiBindingTableSize)
    {
        this.codiBindingTableSize = codiBindingTableSize;
    }

    @XmlTransient
    public BYTE getCodiTempBindingEntries()
    {
        return this.codiTempBindingEntries;
    } 

    public void setCodiTempBindingEntries(BYTE codiTempBindingEntries)
    {
        this.codiTempBindingEntries = codiTempBindingEntries;
    } 

    @XmlTransient
    public BYTE getCodiNeighborTableSize()
    {
        return this.codiNeighborTableSize;
    } 

    public void setCodiNeighborTableSize(BYTE codiNeighborTableSize)
    {
        this.codiNeighborTableSize = codiNeighborTableSize;
    }

    @XmlTransient
    public BYTE getCodiTCAddressCasheSize()
    {
        return this.codiTCAddressCasheSize;
    } 

    public void setCodiTCAddressCasheSize(BYTE codiTCAddressCasheSize)
    {
        this.codiTCAddressCasheSize = codiTCAddressCasheSize;
    }

    @XmlTransient
    public BYTE getCodiRouteTableSize()
    {
        return this.codiRouteTableSize;
    } 

    public void setCodiRouteTableSize(BYTE codiRouteTableSize)
    {
        this.codiRouteTableSize = codiRouteTableSize;
    }

    @XmlTransient
    public BYTE getCodiMaxHops()
    {
        return this.codiMaxHops;
    } 

    public void setCodiMaxHops(BYTE codiMaxHops)
    {
        this.codiMaxHops = codiMaxHops;
    }
    
    @XmlTransient
    public BYTE getCodiPacketBufferCount()
    {
        return this.codiPacketBufferCount;
    } 

    public void setCodiPacketBufferCount(BYTE codiPacketBufferCount)
    {
        this.codiPacketBufferCount = codiPacketBufferCount;
    }

    public String toString()
    {
        StringBuffer sb = new StringBuffer();

        sb.append("CLASS["+this.getClass().getName()+"]\n");
        sb.append("codiBindingTableSize: " + codiBindingTableSize + "\n");
        sb.append("codiTempBindingEntries: " + codiTempBindingEntries + "\n");
        sb.append("codiNeighborTableSize: " + codiNeighborTableSize + "\n");
        sb.append("codiTCAddressCasheSize: " + codiTCAddressCasheSize + "\n");
        sb.append("codiRouteTableSize: " + codiRouteTableSize + "\n");
        sb.append("codiMaxHops: " + codiMaxHops + "\n");
        sb.append("codiPacketBufferCount: " + codiPacketBufferCount + "\n");

        return sb.toString();
    }

}
