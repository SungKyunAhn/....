package com.aimir.fep.protocol.fmp.frame.service.entry;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;

import com.aimir.fep.protocol.fmp.datatype.*;
import com.aimir.fep.protocol.fmp.frame.service.Entry;

/**
 * pluginEntry
 * generated by MIB Tool, Do not modify
 *
 * @author Y.S Kim (sorimo@nuritelecom.com)
 * @version $Rev: 1 $, $Date: 2005-11-21 15:59:15 +0900 $,
 * <pre>
 * &lt;complexType name="pluginEntry">
 *   &lt;complexContent>
 *     &lt;extension base="{http://server.ws.command.fep.aimir.com/}entry">
 *       &lt;sequence>
 *         &lt;element name="pluginName" type="{http://server.ws.command.fep.aimir.com/}octet" minOccurs="0"/>
 *         &lt;element name="pluginFileName" type="{http://server.ws.command.fep.aimir.com/}octet" minOccurs="0"/>
 *         &lt;element name="pluginDescr" type="{http://server.ws.command.fep.aimir.com/}octet" minOccurs="0"/>
 *         &lt;element name="pluginType" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="pluginState" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="pluginVersion" type="{http://server.ws.command.fep.aimir.com/}octet" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "pluginEntry", propOrder = {
    "pluginName",
    "pluginFileName",
    "pluginDescr",
    "pluginType",
    "pluginState",
    "pluginVersion"
})
public class pluginEntry extends Entry {

	public OCTET pluginName = 
			new OCTET(16);

	public OCTET pluginFileName = 
			new OCTET(32);

	public OCTET pluginDescr = 
			new OCTET(64);

	public BYTE pluginType = 
			new BYTE();

	public BYTE pluginState = 
			new BYTE();

	public OCTET pluginVersion = 
			new OCTET(8);

	@XmlTransient
	public OCTET getPluginName()
	{
		 return this.pluginName;
	}

	public void setPluginName(OCTET pluginName)
	{
		 this.pluginName=pluginName;
	}

	@XmlTransient
	public OCTET getPluginFileName()
	{
		 return this.pluginFileName;
	}

	public void setPluginFileName(OCTET pluginFileName)
	{
		 this.pluginFileName=pluginFileName;
	}

	@XmlTransient
	public OCTET getPluginDescr()
	{
		 return this.pluginDescr;
	}

	public void setPluginDescr(OCTET pluginDescr)
	{
		 this.pluginDescr=pluginDescr;
	}

	@XmlTransient
	public BYTE getPluginType()
	{
		 return this.pluginType;
	}

	public void setPluginType(BYTE pluginType)
	{
		 this.pluginType=pluginType;
	}

	@XmlTransient
	public BYTE getPluginState()
	{
		 return this.pluginState;
	}

	public void setPluginState(BYTE pluginState)
	{
		 this.pluginState=pluginState;
	}

	@XmlTransient
	public OCTET getPluginVersion()
	{
		 return this.pluginVersion;
	}

	public void setPluginVersion(OCTET pluginVersion)
	{
		 this.pluginVersion=pluginVersion;
	}


    public String toString()
    {
        StringBuffer sb = new StringBuffer();

		sb.append("CLASS["+this.getClass().getName()+"]\n");
		sb.append("pluginName: " + pluginName + "\n");
		sb.append("pluginFileName: " + pluginFileName + "\n");
		sb.append("pluginDescr: " + pluginDescr + "\n");
		sb.append("pluginType: " + pluginType + "\n");
		sb.append("pluginState: " + pluginState + "\n");
		sb.append("pluginVersion: " + pluginVersion + "\n");


        return sb.toString();
    }
}
