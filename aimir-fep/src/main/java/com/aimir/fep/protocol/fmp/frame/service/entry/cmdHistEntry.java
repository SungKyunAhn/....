package com.aimir.fep.protocol.fmp.frame.service.entry;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;

import com.aimir.fep.protocol.fmp.datatype.OCTET;
import com.aimir.fep.protocol.fmp.datatype.TIMESTAMP;
import com.aimir.fep.protocol.fmp.datatype.UINT;
import com.aimir.fep.protocol.fmp.frame.service.Entry;

/**
 * cmdHistEntry
 * generated by MIB Tool, Do not modify
 *
 * @author Y.S Kim (sorimo@nuritelecom.com)
 * @version $Rev: 1 $, $Date: 2005-11-21 15:59:15 +0900 $,
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "cmdHistEntry", propOrder = {
        "cmdHistDate",
        "cmdHistFileName",
        "cmdHistFileSize"
})
public class cmdHistEntry extends Entry {

	public TIMESTAMP cmdHistDate = 
			new TIMESTAMP(7);

	public OCTET cmdHistFileName = 
			new OCTET(32);

	public UINT cmdHistFileSize = 
			new UINT();

	@XmlTransient
	public TIMESTAMP getCmdHistDate()
	{
		 return this.cmdHistDate;
	}

	public void setCmdHistDate(TIMESTAMP cmdHistDate)
	{
		 this.cmdHistDate=cmdHistDate;
	}

	@XmlTransient
	public OCTET getCmdHistFileName()
	{
		 return this.cmdHistFileName;
	}

	public void setCmdHistFileName(OCTET cmdHistFileName)
	{
		 this.cmdHistFileName=cmdHistFileName;
	}

	@XmlTransient
	public UINT getCmdHistFileSize()
	{
		 return this.cmdHistFileSize;
	}

	public void setCmdHistFileSize(UINT cmdHistFileSize)
	{
		 this.cmdHistFileSize=cmdHistFileSize;
	}


    public String toString()
    {
        StringBuffer sb = new StringBuffer();

		sb.append("CLASS["+this.getClass().getName()+"]\n");
		sb.append("cmdHistDate: " + cmdHistDate + "\n");
		sb.append("cmdHistFileName: " + cmdHistFileName + "\n");
		sb.append("cmdHistFileSize: " + cmdHistFileSize + "\n");


        return sb.toString();
    }
}
