package com.aimir.fep.meter;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.junit.Test;

import com.aimir.fep.meter.parser.AMULSRW_RS232;
import com.aimir.fep.util.Hex;
import com.aimir.model.device.EnergyMeter;

public class AMUTest {
    private static Log log = LogFactory.getLog(AMUTest.class);
    
    @Test
    public void lsrw() throws Exception {
        byte[] b = Hex.encode("4900f5101099010204b35a00000000000000000000000000000000000007de06020e261d3133307633312020de0706020e300001000000006009000002030e061e00000000de070601000000002e000000de070501000000042d000000de070401000000022c000000de070301000000062b000000de070201000000062a000000068aefb9068aefb9152007de050b140f0000000372b800000000000007de0501000000000000000000000000000007de050100000000000000000000ddbf0000ddbf003407de0501090f0000000006e000000000000007de0501000000000000000000000000000007de050100000000000000004c04fd6a0f03c8000000d003d77de60b1e03c9000000d203d87de60b2d03c4000000d203d37de60b4003bf000000cd03ce7de60b4f03c5000000d303d47de60b5e03a4000000d503b37de60b6d0395000000d903a47de60b8003aa000000d203b97de60b8f03a1000000d403b07de60b9e0393000000d803a27de60bad03ab000000cd03ba7de60bc003b5000000d103c47de60bcf0394000000d603a37de60bde0385000000dc03947de60bed0389000000dc03987de60c00038e000000da039d7de60c0f039f000000d303ae7de60c1e039d000000d703ac7de60c2d039c000000dd03ac7de60c4003ae000000da03bd7de60c4f039f000000dd03ae7de60c5e03de000000d403ed7de60c6d0412000000d604217de60c800422000000d504317de60c8f0436000000d804457de60c9e044e000000d6045d7de60cad045a000000d504697de60cc00470000000d9047f7de60ccf0492000000d504a17de60cde0489000000dc04987de60ced04ae000000d704bd7de60d0004e1000000d704ef7de60d0f04ed000000d904fc7de60d1e0506000000df05157de60d2d050d000000dd051c7de60d400510000000e2051f7de60d4f0500000000e7050f7de60d5e04f4000000e305037de60d6d04d5000000e604e47de60d8004d3000000e704e27de60d8f04b1000000eb04c07de60d9e048c000000ea049b7de60dad0460000000eb046f7de60dc0042f000000ed043e7de60dcf0408000000ed04177de60dde03e1000000ec03f07de60ded03af000000f403c67de610000389000000f103a67de6100f035a000000f603787de6101e0330000000f3034e7de6102d0313000000f203317de610400304000000f203227de6104f02de000000f002fc7de6105e02ca000000f002e87de6106d02be000000ee02dc7de6108002a6000000ed02c57de6108f02a0000000eb02be7de6109e0296000000ed02b57de610ad028c000000ed02aa7de610c00286000000ef02a57de610cf0280000000ee029f7de610de027c000000ee029a7de610ed0274000000ec02967de61100027c000000ee029b7de6110f0279000000eb02997de6111e0274000000ee02977de6112d027e000000ee029c7de611400272000000eb02957de6114f0273000000e902947de6115e0289000000e902a77de6116d02a1000000e702bf7de6118002d5000000e102f27de6118f02f4000000de030f7de6119e0337000000db034c7de611ad036d000000d7037c7de611c00396000000d603a57de611cf03dd000000d003ec7de611de040e000000cb041d7de611ed0430000000cb043e7de612000420000000cd042f7de6120f03f7000000cb04067de6121e03e7000000c903f67de6122d03c4000000d203d37de6124003be000200d403cd7de6124f038f000000d9039e7de6125e0394000400d403a37de6126d038e000000da039e7de6128003a0000000d203af7de6128f0380000100d3038f7de6129e0364000000d503737de612ad0376000000cf03857de612c00374000000d203837de612cf0365000000d403747de612de036c000000d0037b7de612ed0364000000d103737de613000367000000d603767de6130f0356000000d803657de6131e034e000000db03607de6132d035d000000d9036d7de613400363000000d903727de6134f035d000000d2036d7de6135e034a000000d0035a7de6136d0346000000cf03557de61380033e000000d103507de6138f0342000000d103527de6139e0354000000d403647de613ad");
        
        EnergyMeter meter = new EnergyMeter();
        meter.setMdsId("308061");
        AMULSRW_RS232 amu = new AMULSRW_RS232();
        amu.setMeter(meter);
        amu.parse(b);
        amu.getLPData();
    }
}
