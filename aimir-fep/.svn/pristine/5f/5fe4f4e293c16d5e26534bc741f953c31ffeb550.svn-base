package com.aimir.fep.protocol.fmp.client.gprs;
import java.io.IOException;
import java.net.InetSocketAddress;
import java.net.Socket;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.aimir.fep.util.FMPProperty;

public class TCPTriggerClient {
	private Log log = LogFactory.getLog(TCPTriggerClient.class);
	
	public boolean cmdTCPTrigger(String cmd, String ipAddr){
		String port = FMPProperty.getProperty("tcp.trigger.port", "3500");
		int timeout = Integer.parseInt(FMPProperty.getProperty("tcp.trigger.timeout", "3000"));
		boolean isConnect = false;
		Socket socket = new Socket();
		try{
			log.info("################# [cmdTCPTrigger] Start #################");

			// IP Check
			if(ipAddr == null || ipAddr.equals("")){
				log.info("IP Address is empty!");
				return isConnect;
			}
			
			// TCP Connect
			log.info("[cmdTCPTrigger] Saurce Command: " + cmd + ", IP: " + ipAddr + ", Port: " + port);
			socket.connect(new InetSocketAddress(ipAddr, Integer.parseInt(port)), timeout);
			log.info("TCP Socket is Connected");
			isConnect = true;
			
		}catch (IOException e) {
            log.debug(e.toString());
            isConnect = false;
        }finally{
        	try {
				socket.close();
				log.info("TCP Socket is Closed");
	        	log.info("################# [cmdTCPTrigger] End ###################");
			} catch (IOException e) {
				log.debug(e.toString());
			}
        }
		return isConnect;
	}
}
