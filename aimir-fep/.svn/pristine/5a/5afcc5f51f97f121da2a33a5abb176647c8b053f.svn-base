package com.aimir.fep.protocol.fmp.frame.service.entry;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;

import com.aimir.fep.protocol.fmp.datatype.*;
import com.aimir.fep.protocol.fmp.frame.service.Entry;

/**
 * gpioEntry
 * generated by MIB Tool, Do not modify
 *
 * @author Y.S Kim (sorimo@nuritelecom.com)
 * @version $Rev: 1 $, $Date: 2005-11-21 15:59:15 +0900 $,
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="gpioEntry">
 *   &lt;complexContent>
 *     &lt;extension base="{http://server.ws.command.fep.aimir.com/}entry">
 *       &lt;sequence>
 *         &lt;element name="gpioMask" type="{http://server.ws.command.fep.aimir.com/}uint" minOccurs="0"/>
 *         &lt;element name="gpioPowerFail" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="gpioLowBattery" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="gpioBUSY" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="gpioSTBY" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="gpioDCD" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="gpioRI" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="gpioSink1State" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *         &lt;element name="gpioSink2State" type="{http://server.ws.command.fep.aimir.com/}byte" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "gpioEntry", propOrder = {
    "gpioMask",
    "gpioPowerFail",
    "gpioLowBattery",
    "gpioBUSY",
    "gpioSTBY",
    "gpioDCD",
    "gpioRI",
    "gpioSink1State",
    "gpioSink2State"
})
public class gpioEntry extends Entry {

	public UINT gpioMask = 
			new UINT();

	public BYTE gpioPowerFail = 
			new BYTE();

	public BYTE gpioLowBattery = 
			new BYTE();

	public BYTE gpioBUSY = 
			new BYTE();

	public BYTE gpioSTBY = 
			new BYTE();

	public BYTE gpioDCD = 
			new BYTE();

	public BYTE gpioRI = 
			new BYTE();

	public BYTE gpioSink1State = 
			new BYTE();

	public BYTE gpioSink2State = 
			new BYTE();

	@XmlTransient
	public UINT getGpioMask()
	{
		 return this.gpioMask;
	}

	public void setGpioMask(UINT gpioMask)
	{
		 this.gpioMask=gpioMask;
	}

	@XmlTransient
	public BYTE getGpioPowerFail()
	{
		 return this.gpioPowerFail;
	}

	public void setGpioPowerFail(BYTE gpioPowerFail)
	{
		 this.gpioPowerFail=gpioPowerFail;
	}

	@XmlTransient
	public BYTE getGpioLowBattery()
	{
		 return this.gpioLowBattery;
	}

	public void setGpioLowBattery(BYTE gpioLowBattery)
	{
		 this.gpioLowBattery=gpioLowBattery;
	}

	@XmlTransient
	public BYTE getGpioBUSY()
	{
		 return this.gpioBUSY;
	}

	public void setGpioBUSY(BYTE gpioBUSY)
	{
		 this.gpioBUSY=gpioBUSY;
	}

	@XmlTransient
	public BYTE getGpioSTBY()
	{
		 return this.gpioSTBY;
	}

	public void setGpioSTBY(BYTE gpioSTBY)
	{
		 this.gpioSTBY=gpioSTBY;
	}

	@XmlTransient
	public BYTE getGpioDCD()
	{
		 return this.gpioDCD;
	}

	public void setGpioDCD(BYTE gpioDCD)
	{
		 this.gpioDCD=gpioDCD;
	}

	@XmlTransient
	public BYTE getGpioRI()
	{
		 return this.gpioRI;
	}

	public void setGpioRI(BYTE gpioRI)
	{
		 this.gpioRI=gpioRI;
	}

	@XmlTransient
	public BYTE getGpioSink1State()
	{
		 return this.gpioSink1State;
	}

	public void setGpioSink1State(BYTE gpioSink1State)
	{
		 this.gpioSink1State=gpioSink1State;
	}

	@XmlTransient
	public BYTE getGpioSink2State()
	{
		 return this.gpioSink2State;
	}

	public void setGpioSink2State(BYTE gpioSink2State)
	{
		 this.gpioSink2State=gpioSink2State;
	}


    public String toString()
    {
        StringBuffer sb = new StringBuffer();

		sb.append("CLASS["+this.getClass().getName()+"]\n");
		sb.append("gpioMask: " + gpioMask + "\n");
		sb.append("gpioPowerFail: " + gpioPowerFail + "\n");
		sb.append("gpioLowBattery: " + gpioLowBattery + "\n");
		sb.append("gpioBUSY: " + gpioBUSY + "\n");
		sb.append("gpioSTBY: " + gpioSTBY + "\n");
		sb.append("gpioDCD: " + gpioDCD + "\n");
		sb.append("gpioRI: " + gpioRI + "\n");
		sb.append("gpioSink1State: " + gpioSink1State + "\n");
		sb.append("gpioSink2State: " + gpioSink2State + "\n");


        return sb.toString();
    }
}
