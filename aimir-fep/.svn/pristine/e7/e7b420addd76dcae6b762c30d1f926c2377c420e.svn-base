package com.aimir.fep.protocol.fmp.frame.service.entry;

import javax.xml.bind.annotation.XmlTransient;

import com.aimir.fep.protocol.fmp.datatype.*;
import com.aimir.fep.protocol.fmp.frame.service.Entry;

/**
 * sinkStaticEntry
 * generated by MIB Tool, Do not modify
 *
 * @author Y.S Kim (sorimo@nuritelecom.com)
 * @version $Rev: 1 $, $Date: 2005-11-21 15:59:15 +0900 $,
 */
public class sinkStaticEntry extends Entry {

	public BYTE sinkStaticIndex = 
			new BYTE();

	public UINT sinkRecvBytes = 
			new UINT();

	public UINT sinkSendBytes = 
			new UINT();

	public UINT sinkErrorBytes = 
			new UINT();

	public UINT sinkRecvPacket = 
			new UINT();

	public UINT sinkSendPacket = 
			new UINT();

	public UINT sinkTimeoutPacket = 
			new UINT();

	public UINT sinkSeqErrorPacket = 
			new UINT();

	public UINT sinkCrcErrorPacket = 
			new UINT();

	public UINT sinkSendDropPacket = 
			new UINT();

	public WORD sinkResetCount = 
			new WORD();

	@XmlTransient
	public BYTE getSinkStaticIndex()
	{
		 return this.sinkStaticIndex;
	}

	public void setSinkStaticIndex(BYTE sinkStaticIndex)
	{
		 this.sinkStaticIndex=sinkStaticIndex;
	}

	@XmlTransient
	public UINT getSinkRecvBytes()
	{
		 return this.sinkRecvBytes;
	}

	public void setSinkRecvBytes(UINT sinkRecvBytes)
	{
		 this.sinkRecvBytes=sinkRecvBytes;
	}

	@XmlTransient
	public UINT getSinkSendBytes()
	{
		 return this.sinkSendBytes;
	}

	public void setSinkSendBytes(UINT sinkSendBytes)
	{
		 this.sinkSendBytes=sinkSendBytes;
	}

	@XmlTransient
	public UINT getSinkErrorBytes()
	{
		 return this.sinkErrorBytes;
	}

	public void setSinkErrorBytes(UINT sinkErrorBytes)
	{
		 this.sinkErrorBytes=sinkErrorBytes;
	}

	@XmlTransient
	public UINT getSinkRecvPacket()
	{
		 return this.sinkRecvPacket;
	}

	public void setSinkRecvPacket(UINT sinkRecvPacket)
	{
		 this.sinkRecvPacket=sinkRecvPacket;
	}

	@XmlTransient
	public UINT getSinkSendPacket()
	{
		 return this.sinkSendPacket;
	}

	public void setSinkSendPacket(UINT sinkSendPacket)
	{
		 this.sinkSendPacket=sinkSendPacket;
	}

	@XmlTransient
	public UINT getSinkTimeoutPacket()
	{
		 return this.sinkTimeoutPacket;
	}

	public void setSinkTimeoutPacket(UINT sinkTimeoutPacket)
	{
		 this.sinkTimeoutPacket=sinkTimeoutPacket;
	}

	@XmlTransient
	public UINT getSinkSeqErrorPacket()
	{
		 return this.sinkSeqErrorPacket;
	}

	public void setSinkSeqErrorPacket(UINT sinkSeqErrorPacket)
	{
		 this.sinkSeqErrorPacket=sinkSeqErrorPacket;
	}

	@XmlTransient
	public UINT getSinkCrcErrorPacket()
	{
		 return this.sinkCrcErrorPacket;
	}

	public void setSinkCrcErrorPacket(UINT sinkCrcErrorPacket)
	{
		 this.sinkCrcErrorPacket=sinkCrcErrorPacket;
	}

	@XmlTransient
	public UINT getSinkSendDropPacket()
	{
		 return this.sinkSendDropPacket;
	}

	public void setSinkSendDropPacket(UINT sinkSendDropPacket)
	{
		 this.sinkSendDropPacket=sinkSendDropPacket;
	}

	@XmlTransient
	public WORD getSinkResetCount()
	{
		 return this.sinkResetCount;
	}

	public void setSinkResetCount(WORD sinkResetCount)
	{
		 this.sinkResetCount=sinkResetCount;
	}


    public String toString()
    {
        StringBuffer sb = new StringBuffer();

		sb.append("CLASS["+this.getClass().getName()+"]\n");
		sb.append("sinkStaticIndex: " + sinkStaticIndex + "\n");
		sb.append("sinkRecvBytes: " + sinkRecvBytes + "\n");
		sb.append("sinkSendBytes: " + sinkSendBytes + "\n");
		sb.append("sinkErrorBytes: " + sinkErrorBytes + "\n");
		sb.append("sinkRecvPacket: " + sinkRecvPacket + "\n");
		sb.append("sinkSendPacket: " + sinkSendPacket + "\n");
		sb.append("sinkTimeoutPacket: " + sinkTimeoutPacket + "\n");
		sb.append("sinkSeqErrorPacket: " + sinkSeqErrorPacket + "\n");
		sb.append("sinkCrcErrorPacket: " + sinkCrcErrorPacket + "\n");
		sb.append("sinkSendDropPacket: " + sinkSendDropPacket + "\n");
		sb.append("sinkResetCount: " + sinkResetCount + "\n");


        return sb.toString();
    }
}
