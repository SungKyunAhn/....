package com.aimir.fep.protocol.fmp.frame.service.entry;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlTransient;
import javax.xml.bind.annotation.XmlType;

import com.aimir.fep.protocol.fmp.datatype.*;
import com.aimir.fep.protocol.fmp.frame.service.Entry;

/**
 * varValueEntry (2.3.0)
 * generated by MIB Tool, Do not modify
 *
 * @author Y.S Kim (sorimo@nuritelecom.com)
 * @version $Rev: 1 $, $Date: 2005-11-21 15:59:15 +0900 $,
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "varValueEntry", propOrder = {
        "varValueMask",
        "varAutoResetCheckInterval",
        "varSysPowerOffDelay",
        "varSysTempMonInterval",
        "varAutoTimeSyncInterval",
        "varSysMeteringThreadCount",
        "varSinkPollingInterval",
        "varSinkResetInterval",
        "varSinkResetDelay",
        "varSinkLedTurnOffInterval",
        "varSinkAckWaitTime",
        "varSensorTimeout",
        "varSensorKeepalive",
        "varSensorMeterSaveCount",
        "varMeterDayMask",
        "varMeterHourMask",
        "varMeterStartMin",
        "varRecoveryDayMask",
        "varRecoveryHourMask",
        "varRecoveryStartMin",
        "varCmdHistSaveDay",
        "varEventLogSaveDay",
        "varCommLogSaveDay",
        "varMeterLogSaveDay",
        "varAutoResetTime",
        "varMeterUploadCycleType",
        "varMeterUploadCycle",
        "varMeterUploadStartHour",
        "varMeterUploadStartMin",
        "varMeterUploadRetry",
        "varMeterIssueDate",
        "varMemoryCriticalRate",
        "varFlashCriticalRate",
        "varNapcGroupInterval",
        "varNapcRetry",
        "varNapcRetryHour",
        "varNapcRetryStartSecond",
        "varNapcRetryClear",
        "varMaxEventLogSize",
        "varMaxAlarmLogSize",
        "varMaxCmdLogSize",
        "varMaxCommLogSize",
        "varMaxMobileLogSize",
        "varKeepaliveInterval",
        "varAlarmLogSaveDay",
        "varTimeBroadcastInterval",
        "varStatusMonitorTime",
        "varUploadTryTime",
        "varDataSaveDay",
        "varMeteringPeriod",
        "varRecoveryPeriod",
        "varMeteringRetry",
        "varRecoveryRetry",
        "varCheckDayMask",
        "varCheckHourMask",
        "varCheckStartMin",
        "varCheckPeriod",
        "varCheckRetry",
        "varMeterTimesyncDayMask",
        "varMeterTimesyncHourMask",
        "varMeterReadingInterval",
        "varHeaterOnTemp",
        "varHeaterOffTemp",
        "varMobileLiveCheckInterval",
        "varEventReadDayMask",
        "varEventReadHourMask",
        "varEventSendDelay",
        "varEventAlertLevel",
        "varSensorLimit",
        "varMeteringStrategy",
        "varTimesyncThreshold",
        "varMobileLiveCheckMethod",
        "varScanningStrategy",
        "varMobileLogSaveDay",
        "varUpgradeLogSaveDay",
        "varUploadLogSaveDay",
        "varTimesyncLogSaveDay",
        "varMaxMeterLogSize",
        "varMaxUpgradeLogSize",
        "varMaxUploadLogSize",
        "varMaxTimesyncLogSize"
})
public class varValueEntry extends Entry {

    /* 2.3.1 */
	public UINT varValueMask = 
			new UINT();

	/* 2.3.2 */
	public UINT varAutoResetCheckInterval = 
			new UINT();

	/* 2.3.3 */
	public UINT varSysPowerOffDelay = 
			new UINT();

	/* 2.3.4 */
	public UINT varSysTempMonInterval = 
			new UINT();

	/* 2.3.5 */
	public UINT varAutoTimeSyncInterval = 
			new UINT();

	/* 2.3.6 */
	public BYTE varSysMeteringThreadCount = 
			new BYTE();

	/* 2.3.7 */
	public UINT varSinkPollingInterval = 
			new UINT();

	/* 2.3.8 */
	public UINT varSinkResetInterval = 
			new UINT();

	/* 2.3.9 */
	public UINT varSinkResetDelay = 
			new UINT();

	/* 2.3.10 */
	public UINT varSinkLedTurnOffInterval = 
			new UINT();

	/* 2.3.11 */
	public BYTE varSinkAckWaitTime = 
			new BYTE();

	/* 2.3.12 */
	public BYTE varSensorTimeout = 
			new BYTE();

	/* 2.3.13 */
	public BYTE varSensorKeepalive = 
			new BYTE();

	/* 2.3.14 */
	public WORD varSensorMeterSaveCount = 
			new WORD();

	/* 2.3.15 */
	public UINT varMeterDayMask = 
			new UINT();

	/* 2.3.16 */
	public UINT varMeterHourMask = 
			new UINT();

	/* 2.3.17 */
	public BYTE varMeterStartMin = 
			new BYTE();

	/* 2.3.18 */
	public UINT varRecoveryDayMask = 
			new UINT();

	/* 2.3.19 */
	public UINT varRecoveryHourMask = 
			new UINT();

	/* 2.3.20 */
	public BYTE varRecoveryStartMin = 
			new BYTE();

	/* 2.3.21 */
	public BYTE varCmdHistSaveDay = 
			new BYTE();

	/* 2.3.22 */
	public BYTE varEventLogSaveDay = 
			new BYTE();

	/* 2.3.23 */
	public BYTE varCommLogSaveDay = 
			new BYTE();

	/* 2.3.24 */
	public BYTE varMeterLogSaveDay = 
			new BYTE();

	/* 2.3.25 */
	public TIMESTAMP varAutoResetTime = 
			new TIMESTAMP(7);

	/* 2.3.26 */
	public BYTE varMeterUploadCycleType = 
			new BYTE();

	/* 2.3.27 */
	public UINT varMeterUploadCycle = 
			new UINT();

	/* 2.3.28 */
	public BYTE varMeterUploadStartHour = 
			new BYTE();

	/* 2.3.29 */
	public BYTE varMeterUploadStartMin = 
			new BYTE();

	/* 2.3.30 */
	public BYTE varMeterUploadRetry = 
			new BYTE();

	/* 2.3.31 */
	public TIMESTAMP varMeterIssueDate = 
			new TIMESTAMP(7);

	/* 2.3.32 */
	public BYTE varMemoryCriticalRate = 
			new BYTE();

	/* 2.3.33 */
	public BYTE varFlashCriticalRate = 
			new BYTE();

	/* 2.3.34 */
	public BYTE varNapcGroupInterval = new BYTE();
	
	/* 2.3.35 */
	public BOOL varNapcRetry = new BOOL();
	
	/* 2.3.36 */
	public BYTE varNapcRetryHour = new BYTE();
	
	/* 2.3.37 */
	public BYTE varNapcRetryStartSecond = new BYTE();
	
	/* 2.3.38 */
	public UINT varNapcRetryClear = new UINT();
	
	/* 2.3.39 */
	public UINT varMaxEventLogSize = new UINT();
	
	/* 2.3.40 */
	public UINT varMaxAlarmLogSize = new UINT();
	
	/* 2.3.41 */
	public UINT varMaxCmdLogSize = new UINT();
	
	/* 2.3.42 */
	public UINT varMaxCommLogSize = new UINT();
	
	/* 2.3.43 */
	public UINT varMaxMobileLogSize = new UINT();
	
	/* 2.3.44 */
	public UINT varKeepaliveInterval = new UINT();
	
	/* 2.3.45 */
	public BYTE varAlarmLogSaveDay = new BYTE();
	
	/* 2.3.46 */
	public UINT varTimeBroadcastInterval = new UINT();
	
	/* 2.3.47 */
	public BYTE varStatusMonitorTime = new BYTE();
	
	/* 2.3.48 */
	public UINT varUploadTryTime = new UINT();
	
	/* 2.3.49 */
	public UINT varDataSaveDay = new UINT();
	
	/* 2.3.50 */
	public UINT varMeteringPeriod = new UINT();
	
	/* 2.3.51 */
	public UINT varRecoveryPeriod = new UINT();
	
	/* 2.3.52 */
	public UINT varMeteringRetry = new UINT();
	
	/* 2.3.53 */
	public UINT varRecoveryRetry = new UINT();
	
	/* 2.3.54 */
	public UINT varCheckDayMask = new UINT();
	
	/* 2.3.55 */
	public UINT varCheckHourMask = new UINT();
	
	/* 2.3.56 */
	public BYTE varCheckStartMin = new BYTE();
	
	/* 2.3.57 */
	public UINT varCheckPeriod = new UINT();
	
	/* 2.3.58 */
	public UINT varCheckRetry = new UINT();
	
	/* 2.3.59 */
	public UINT varMeterTimesyncDayMask = new UINT();
	
	/* 2.3.60 */
	public UINT varMeterTimesyncHourMask = new UINT();
	
	/* 2.3.61 */
	public UINT varMeterReadingInterval = new UINT();
	
	/* 2.3.62 */
	public INT varHeaterOnTemp = new INT();
	
	/* 2.3.63 */
	public INT varHeaterOffTemp = new INT();
	
	/* 2.3.64 */
	public INT varMobileLiveCheckInterval = new INT();
	
	/* 2.3.65 */
	public UINT varEventReadDayMask = new UINT();
	
	/* 2.3.66 */
	public UINT varEventReadHourMask = new UINT();
	
	/* 2.3.67 */
	public UINT varEventSendDelay = new UINT();
	
	/* 2.3.68 */
	public BYTE varEventAlertLevel = new BYTE();
	
	/* 2.3.69 */
	public INT varSensorLimit = new INT();
	
	/* 2.3.70 */
	public BYTE varMeteringStrategy = new BYTE();
	
	/* 2.3.71 */
	public INT varTimesyncThreshold = new INT();
	
	/* 2.3.72 */
	public BYTE varMobileLiveCheckMethod = new BYTE();
	
	/* 2.3.73 */
	public BYTE varScanningStrategy = new BYTE();
	
	/* 2.3.74 */
	public BYTE varMobileLogSaveDay = new BYTE();
	
	/* 2.3.75 */
	public BYTE varUpgradeLogSaveDay = new BYTE();
	
	/* 2.3.76 */
	public BYTE varUploadLogSaveDay = new BYTE();
	
	/* 2.3.77 */
	public BYTE varTimesyncLogSaveDay = new BYTE();
	
	/* 2.3.78 */
	public UINT varMaxMeterLogSize = new UINT();
	
	/* 2.3.79 */
	public UINT varMaxUpgradeLogSize = new UINT();
	
	/* 2.3.80 */
	public UINT varMaxUploadLogSize = new UINT();
	
	/* 2.3.81 */
	public UINT varMaxTimesyncLogSize = new UINT();
	
	@XmlTransient
	public UINT getVarValueMask()
	{
		 return this.varValueMask;
	}

	public void setVarValueMask(UINT varValueMask)
	{
		 this.varValueMask=varValueMask;
	}

	@XmlTransient
	public UINT getVarAutoResetCheckInterval()
	{
		 return this.varAutoResetCheckInterval;
	}

	public void setVarAutoResetCheckInterval(UINT varAutoResetCheckInterval)
	{
		 this.varAutoResetCheckInterval=varAutoResetCheckInterval;
	}

	@XmlTransient
	public UINT getVarSysPowerOffDelay()
	{
		 return this.varSysPowerOffDelay;
	}

	public void setVarSysPowerOffDelay(UINT varSysPowerOffDelay)
	{
		 this.varSysPowerOffDelay=varSysPowerOffDelay;
	}

	@XmlTransient
	public UINT getVarSysTempMonInterval()
	{
		 return this.varSysTempMonInterval;
	}

	public void setVarSysTempMonInterval(UINT varSysTempMonInterval)
	{
		 this.varSysTempMonInterval=varSysTempMonInterval;
	}

	@XmlTransient
	public UINT getVarAutoTimeSyncInterval()
	{
		 return this.varAutoTimeSyncInterval;
	}

	public void setVarAutoTimeSyncInterval(UINT varAutoTimeSyncInterval)
	{
		 this.varAutoTimeSyncInterval=varAutoTimeSyncInterval;
	}

	@XmlTransient
	public BYTE getVarSysMeteringThreadCount()
	{
		 return this.varSysMeteringThreadCount;
	}

	public void setVarSysMeteringThreadCount(BYTE varSysMeteringThreadCount)
	{
		 this.varSysMeteringThreadCount=varSysMeteringThreadCount;
	}

	@XmlTransient
	public UINT getVarSinkPollingInterval()
	{
		 return this.varSinkPollingInterval;
	}

	public void setVarSinkPollingInterval(UINT varSinkPollingInterval)
	{
		 this.varSinkPollingInterval=varSinkPollingInterval;
	}

	@XmlTransient
	public UINT getVarSinkResetInterval()
	{
		 return this.varSinkResetInterval;
	}

	public void setVarSinkResetInterval(UINT varSinkResetInterval)
	{
		 this.varSinkResetInterval=varSinkResetInterval;
	}

	@XmlTransient
	public UINT getVarSinkResetDelay()
	{
		 return this.varSinkResetDelay;
	}

	public void setVarSinkResetDelay(UINT varSinkResetDelay)
	{
		 this.varSinkResetDelay=varSinkResetDelay;
	}

	@XmlTransient
	public UINT getVarSinkLedTurnOffInterval()
	{
		 return this.varSinkLedTurnOffInterval;
	}

	public void setVarSinkLedTurnOffInterval(UINT varSinkLedTurnOffInterval)
	{
		 this.varSinkLedTurnOffInterval=varSinkLedTurnOffInterval;
	}

	@XmlTransient
	public BYTE getVarSinkAckWaitTime()
	{
		 return this.varSinkAckWaitTime;
	}

	public void setVarSinkAckWaitTime(BYTE varSinkAckWaitTime)
	{
		 this.varSinkAckWaitTime=varSinkAckWaitTime;
	}

	@XmlTransient
	public BYTE getVarSensorTimeout()
	{
		 return this.varSensorTimeout;
	}

	public void setVarSensorTimeout(BYTE varSensorTimeout)
	{
		 this.varSensorTimeout=varSensorTimeout;
	}

	@XmlTransient
	public BYTE getVarSensorKeepalive()
	{
		 return this.varSensorKeepalive;
	}

	public void setVarSensorKeepalive(BYTE varSensorKeepalive)
	{
		 this.varSensorKeepalive=varSensorKeepalive;
	}

	@XmlTransient
	public WORD getVarSensorMeterSaveCount()
	{
		 return this.varSensorMeterSaveCount;
	}

	public void setVarSensorMeterSaveCount(WORD varSensorMeterSaveCount)
	{
		 this.varSensorMeterSaveCount=varSensorMeterSaveCount;
	}

	@XmlTransient
	public UINT getVarMeterDayMask()
	{
		 return this.varMeterDayMask;
	}

	public void setVarMeterDayMask(UINT varMeterDayMask)
	{
		 this.varMeterDayMask=varMeterDayMask;
	}

	@XmlTransient
	public UINT getVarMeterHourMask()
	{
		 return this.varMeterHourMask;
	}

	public void setVarMeterHourMask(UINT varMeterHourMask)
	{
		 this.varMeterHourMask=varMeterHourMask;
	}

	@XmlTransient
	public BYTE getVarMeterStartMin()
	{
		 return this.varMeterStartMin;
	}

	public void setVarMeterStartMin(BYTE varMeterStartMin)
	{
		 this.varMeterStartMin=varMeterStartMin;
	}

	@XmlTransient
	public UINT getVarRecoveryDayMask()
	{
		 return this.varRecoveryDayMask;
	}

	public void setVarRecoveryDayMask(UINT varRecoveryDayMask)
	{
		 this.varRecoveryDayMask=varRecoveryDayMask;
	}

	@XmlTransient
	public UINT getVarRecoveryHourMask()
	{
		 return this.varRecoveryHourMask;
	}

	public void setVarRecoveryHourMask(UINT varRecoveryHourMask)
	{
		 this.varRecoveryHourMask=varRecoveryHourMask;
	}

	@XmlTransient
	public BYTE getVarRecoveryStartMin()
	{
		 return this.varRecoveryStartMin;
	}

	public void setVarRecoveryStartMin(BYTE varRecoveryStartMin)
	{
		 this.varRecoveryStartMin=varRecoveryStartMin;
	}

	@XmlTransient
	public BYTE getVarCmdHistSaveDay()
	{
		 return this.varCmdHistSaveDay;
	}

	public void setVarCmdHistSaveDay(BYTE varCmdHistSaveDay)
	{
		 this.varCmdHistSaveDay=varCmdHistSaveDay;
	}

	@XmlTransient
	public BYTE getVarEventLogSaveDay()
	{
		 return this.varEventLogSaveDay;
	}

	public void setVarEventLogSaveDay(BYTE varEventLogSaveDay)
	{
		 this.varEventLogSaveDay=varEventLogSaveDay;
	}

	@XmlTransient
	public BYTE getVarCommLogSaveDay()
	{
		 return this.varCommLogSaveDay;
	}

	public void setVarCommLogSaveDay(BYTE varCommLogSaveDay)
	{
		 this.varCommLogSaveDay=varCommLogSaveDay;
	}

	@XmlTransient
	public BYTE getVarMeterLogSaveDay()
	{
		 return this.varMeterLogSaveDay;
	}

	public void setVarMeterLogSaveDay(BYTE varMeterLogSaveDay)
	{
		 this.varMeterLogSaveDay=varMeterLogSaveDay;
	}

	@XmlTransient
	public TIMESTAMP getVarAutoResetTime()
	{
		 return this.varAutoResetTime;
	}

	public void setVarAutoResetTime(TIMESTAMP varAutoResetTime)
	{
		 this.varAutoResetTime=varAutoResetTime;
	}

	@XmlTransient
	public BYTE getVarMeterUploadCycleType()
	{
		 return this.varMeterUploadCycleType;
	}

	public void setVarMeterUploadCycleType(BYTE varMeterUploadCycleType)
	{
		 this.varMeterUploadCycleType=varMeterUploadCycleType;
	}

	@XmlTransient
	public UINT getVarMeterUploadCycle()
	{
		 return this.varMeterUploadCycle;
	}

	public void setVarMeterUploadCycle(UINT varMeterUploadCycle)
	{
		 this.varMeterUploadCycle=varMeterUploadCycle;
	}

	@XmlTransient
	public BYTE getVarMeterUploadStartHour()
	{
		 return this.varMeterUploadStartHour;
	}

	public void setVarMeterUploadStartHour(BYTE varMeterUploadStartHour)
	{
		 this.varMeterUploadStartHour=varMeterUploadStartHour;
	}

	@XmlTransient
	public BYTE getVarMeterUploadStartMin()
	{
		 return this.varMeterUploadStartMin;
	}

	public void setVarMeterUploadStartMin(BYTE varMeterUploadStartMin)
	{
		 this.varMeterUploadStartMin=varMeterUploadStartMin;
	}

	@XmlTransient
	public BYTE getVarMeterUploadRetry()
	{
		 return this.varMeterUploadRetry;
	}

	public void setVarMeterUploadRetry(BYTE varMeterUploadRetry)
	{
		 this.varMeterUploadRetry=varMeterUploadRetry;
	}

	@XmlTransient
	public TIMESTAMP getVarMeterIssueDate()
	{
		 return this.varMeterIssueDate;
	}

	public void setVarMeterIssueDate(TIMESTAMP varMeterIssueDate)
	{
		 this.varMeterIssueDate=varMeterIssueDate;
	}

	@XmlTransient
	public BYTE getVarMemoryCriticalRate()
	{
		 return this.varMemoryCriticalRate;
	}

	public void setVarMemoryCriticalRate(BYTE varMemoryCriticalRate)
	{
		 this.varMemoryCriticalRate=varMemoryCriticalRate;
	}

	@XmlTransient
	public BYTE getVarFlashCriticalRate()
	{
		 return this.varFlashCriticalRate;
	}

	public void setVarFlashCriticalRate(BYTE varFlashCriticalRate)
	{
		 this.varFlashCriticalRate=varFlashCriticalRate;
	}

	@XmlTransient
    public BYTE getVarNapcGroupInterval()
    {
        return varNapcGroupInterval;
    }

    public void setVarNapcGroupInterval(BYTE varNapcGroupInterval)
    {
        this.varNapcGroupInterval = varNapcGroupInterval;
    }

    @XmlTransient
    public BOOL getVarNapcRetry()
    {
        return varNapcRetry;
    }

    public void setVarNapcRetry(BOOL varNapcRetry)
    {
        this.varNapcRetry = varNapcRetry;
    }

    @XmlTransient
    public BYTE getVarNapcRetryHour()
    {
        return varNapcRetryHour;
    }

    public void setVarNapcRetryHour(BYTE varNapcRetryHour)
    {
        this.varNapcRetryHour = varNapcRetryHour;
    }

    @XmlTransient
    public BYTE getVarNapcRetryStartSecond()
    {
        return varNapcRetryStartSecond;
    }

    public void setVarNapcRetryStartSecond(BYTE varNapcRetryStartSecond)
    {
        this.varNapcRetryStartSecond = varNapcRetryStartSecond;
    }

    @XmlTransient
    public UINT getVarNapcRetryClear()
    {
        return varNapcRetryClear;
    }

    public void setVarNapcRetryClear(UINT varNapcRetryClear)
    {
        this.varNapcRetryClear = varNapcRetryClear;
    }

    @XmlTransient
    public UINT getVarMaxEventLogSize()
    {
        return varMaxEventLogSize;
    }

    public void setVarMaxEventLogSize(UINT varMaxEventLogSize)
    {
        this.varMaxEventLogSize = varMaxEventLogSize;
    }

    @XmlTransient
    public UINT getVarMaxAlarmLogSize()
    {
        return varMaxAlarmLogSize;
    }

    public void setVarMaxAlarmLogSize(UINT varMaxAlarmLogSize)
    {
        this.varMaxAlarmLogSize = varMaxAlarmLogSize;
    }

    @XmlTransient
    public UINT getVarMaxCmdLogSize()
    {
        return varMaxCmdLogSize;
    }

    public void setVarMaxCmdLogSize(UINT varMaxCmdLogSize)
    {
        this.varMaxCmdLogSize = varMaxCmdLogSize;
    }

    @XmlTransient
    public UINT getVarMaxCommLogSize()
    {
        return varMaxCommLogSize;
    }

    public void setVarMaxCommLogSize(UINT varMaxCommLogSize)
    {
        this.varMaxCommLogSize = varMaxCommLogSize;
    }

    @XmlTransient
    public UINT getVarMaxMobileLogSize()
    {
        return varMaxMobileLogSize;
    }

    public void setVarMaxMobileLogSize(UINT varMaxMobileLogSize)
    {
        this.varMaxMobileLogSize = varMaxMobileLogSize;
    }

    @XmlTransient
    public UINT getVarKeepaliveInterval()
    {
        return varKeepaliveInterval;
    }

    public void setVarKeepaliveInterval(UINT varKeepaliveInterval)
    {
        this.varKeepaliveInterval = varKeepaliveInterval;
    }

    @XmlTransient
    public BYTE getVarAlarmLogSaveDay()
    {
        return varAlarmLogSaveDay;
    }

    public void setVarAlarmLogSaveDay(BYTE varAlarmLogSaveDay)
    {
        this.varAlarmLogSaveDay = varAlarmLogSaveDay;
    }

    @XmlTransient
    public UINT getVarTimeBroadcastInterval()
    {
        return varTimeBroadcastInterval;
    }

    public void setVarTimeBroadcastInterval(UINT varTimeBroadcastInterval)
    {
        this.varTimeBroadcastInterval = varTimeBroadcastInterval;
    }

    @XmlTransient
    public BYTE getVarStatusMonitorTime()
    {
        return varStatusMonitorTime;
    }

    public void setVarStatusMonitorTime(BYTE varStatusMonitorTime)
    {
        this.varStatusMonitorTime = varStatusMonitorTime;
    }

    @XmlTransient
    public UINT getVarUploadTryTime()
    {
        return varUploadTryTime;
    }

    public void setVarUploadTryTime(UINT varUploadTryTime)
    {
        this.varUploadTryTime = varUploadTryTime;
    }

    @XmlTransient
    public UINT getVarDataSaveDay()
    {
        return varDataSaveDay;
    }

    public void setVarDataSaveDay(UINT varDataSaveDay)
    {
        this.varDataSaveDay = varDataSaveDay;
    }

    @XmlTransient
    public UINT getVarMeteringPeriod()
    {
        return varMeteringPeriod;
    }

    public void setVarMeteringPeriod(UINT varMeteringPeriod)
    {
        this.varMeteringPeriod = varMeteringPeriod;
    }

    @XmlTransient
    public UINT getVarRecoveryPeriod()
    {
        return varRecoveryPeriod;
    }

    public void setVarRecoveryPeriod(UINT varRecoveryPeriod)
    {
        this.varRecoveryPeriod = varRecoveryPeriod;
    }

    @XmlTransient
    public UINT getVarMeteringRetry()
    {
        return varMeteringRetry;
    }

    public void setVarMeteringRetry(UINT varMeteringRetry)
    {
        this.varMeteringRetry = varMeteringRetry;
    }

    @XmlTransient
    public UINT getVarRecoveryRetry()
    {
        return varRecoveryRetry;
    }

    public void setVarRecoveryRetry(UINT varRecoveryRetry)
    {
        this.varRecoveryRetry = varRecoveryRetry;
    }

    @XmlTransient
    public UINT getVarCheckDayMask()
    {
        return varCheckDayMask;
    }

    public void setVarCheckDayMask(UINT varCheckDayMask)
    {
        this.varCheckDayMask = varCheckDayMask;
    }

    @XmlTransient
    public UINT getVarCheckHourMask()
    {
        return varCheckHourMask;
    }

    public void setVarCheckHourMask(UINT varCheckHourMask)
    {
        this.varCheckHourMask = varCheckHourMask;
    }

    @XmlTransient
    public BYTE getVarCheckStartMin()
    {
        return varCheckStartMin;
    }

    public void setVarCheckStartMin(BYTE varCheckStartMin)
    {
        this.varCheckStartMin = varCheckStartMin;
    }

    @XmlTransient
    public UINT getVarCheckPeriod()
    {
        return varCheckPeriod;
    }

    public void setVarCheckPeriod(UINT varCheckPeriod)
    {
        this.varCheckPeriod = varCheckPeriod;
    }

    @XmlTransient
    public UINT getVarCheckRetry()
    {
        return varCheckRetry;
    }

    public void setVarCheckRetry(UINT varCheckRetry)
    {
        this.varCheckRetry = varCheckRetry;
    }

    @XmlTransient
    public UINT getVarMeterTimesyncDayMask()
    {
        return varMeterTimesyncDayMask;
    }

    public void setVarMeterTimesyncDayMask(UINT varMeterTimesyncDayMask)
    {
        this.varMeterTimesyncDayMask = varMeterTimesyncDayMask;
    }

    @XmlTransient
    public UINT getVarMeterTimesyncHourMask()
    {
        return varMeterTimesyncHourMask;
    }

    public void setVarMeterTimesyncHourMask(UINT varMeterTimesyncHourMask)
    {
        this.varMeterTimesyncHourMask = varMeterTimesyncHourMask;
    }

    @XmlTransient
    public UINT getVarMeterReadingInterval()
    {
        return varMeterReadingInterval;
    }

    public void setVarMeterReadingInterval(UINT varMeterReadingInterval)
    {
        this.varMeterReadingInterval = varMeterReadingInterval;
    }

    @XmlTransient
    public INT getVarHeaterOnTemp()
    {
        return varHeaterOnTemp;
    }

    public void setVarHeaterOnTemp(INT varHeaterOnTemp)
    {
        this.varHeaterOnTemp = varHeaterOnTemp;
    }

    @XmlTransient
    public INT getVarHeaterOffTemp()
    {
        return varHeaterOffTemp;
    }

    public void setVarHeaterOffTemp(INT varHeaterOffTemp)
    {
        this.varHeaterOffTemp = varHeaterOffTemp;
    }

    @XmlTransient
    public INT getVarMobileLiveCheckInterval()
    {
        return varMobileLiveCheckInterval;
    }

    public void setVarMobileLiveCheckInterval(INT varMobileLiveCheckInterval)
    {
        this.varMobileLiveCheckInterval = varMobileLiveCheckInterval;
    }

    @XmlTransient
    public UINT getVarEventReadDayMask()
    {
        return varEventReadDayMask;
    }

    public void setVarEventReadDayMask(UINT varEventReadDayMask)
    {
        this.varEventReadDayMask = varEventReadDayMask;
    }

    @XmlTransient
    public UINT getVarEventReadHourMask()
    {
        return varEventReadHourMask;
    }

    public void setVarEventReadHourMask(UINT varEventReadHourMask)
    {
        this.varEventReadHourMask = varEventReadHourMask;
    }

    @XmlTransient
    public UINT getVarEventSendDelay()
    {
        return varEventSendDelay;
    }

    public void setVarEventSendDelay(UINT varEventSendDelay)
    {
        this.varEventSendDelay = varEventSendDelay;
    }

    @XmlTransient
    public BYTE getVarEventAlertLevel()
    {
        return varEventAlertLevel;
    }

    public void setVarEventAlertLevel(BYTE varEventAlertLevel)
    {
        this.varEventAlertLevel = varEventAlertLevel;
    }

    @XmlTransient
    public INT getVarSensorLimit()
    {
        return varSensorLimit;
    }

    public void setVarSensorLimit(INT varSensorLimit)
    {
        this.varSensorLimit = varSensorLimit;
    }

    @XmlTransient
    public BYTE getVarMeteringStrategy()
    {
        return varMeteringStrategy;
    }

    public void setVarMeteringStrategy(BYTE varMeteringStrategy)
    {
        this.varMeteringStrategy = varMeteringStrategy;
    }

    @XmlTransient
    public INT getVarTimesyncThreshold()
    {
        return varTimesyncThreshold;
    }

    public void setVarTimesyncThreshold(INT varTimesyncThreshold)
    {
        this.varTimesyncThreshold = varTimesyncThreshold;
    }

    @XmlTransient
    public BYTE getVarMobileLiveCheckMethod()
    {
        return varMobileLiveCheckMethod;
    }

    public void setVarMobileLiveCheckMethod(BYTE varMobileLiveCheckMethod)
    {
        this.varMobileLiveCheckMethod = varMobileLiveCheckMethod;
    }

    @XmlTransient
    public BYTE getVarScanningStrategy()
    {
        return varScanningStrategy;
    }

    public void setVarScanningStrategy(BYTE varScanningStrategy)
    {
        this.varScanningStrategy = varScanningStrategy;
    }

    @XmlTransient
    public BYTE getVarMobileLogSaveDay()
    {
        return varMobileLogSaveDay;
    }

    public void setVarMobileLogSaveDay(BYTE varMobileLogSaveDay)
    {
        this.varMobileLogSaveDay = varMobileLogSaveDay;
    }

    @XmlTransient
    public BYTE getVarUpgradeLogSaveDay()
    {
        return varUpgradeLogSaveDay;
    }

    public void setVarUpgradeLogSaveDay(BYTE varUpgradeLogSaveDay)
    {
        this.varUpgradeLogSaveDay = varUpgradeLogSaveDay;
    }

    @XmlTransient
    public BYTE getVarUploadLogSaveDay()
    {
        return varUploadLogSaveDay;
    }

    public void setVarUploadLogSaveDay(BYTE varUploadLogSaveDay)
    {
        this.varUploadLogSaveDay = varUploadLogSaveDay;
    }

    @XmlTransient
    public BYTE getVarTimesyncLogSaveDay()
    {
        return varTimesyncLogSaveDay;
    }

    public void setVarTimesyncLogSaveDay(BYTE varTimesyncLogSaveDay)
    {
        this.varTimesyncLogSaveDay = varTimesyncLogSaveDay;
    }

    @XmlTransient
    public UINT getVarMaxMeterLogSize()
    {
        return varMaxMeterLogSize;
    }

    public void setVarMaxMeterLogSize(UINT varMaxMeterLogSize)
    {
        this.varMaxMeterLogSize = varMaxMeterLogSize;
    }

    @XmlTransient
    public UINT getVarMaxUpgradeLogSize()
    {
        return varMaxUpgradeLogSize;
    }

    public void setVarMaxUpgradeLogSize(UINT varMaxUpgradeLogSize)
    {
        this.varMaxUpgradeLogSize = varMaxUpgradeLogSize;
    }

    @XmlTransient
    public UINT getVarMaxUploadLogSize()
    {
        return varMaxUploadLogSize;
    }

    public void setVarMaxUploadLogSize(UINT varMaxUploadLogSize)
    {
        this.varMaxUploadLogSize = varMaxUploadLogSize;
    }

    @XmlTransient
    public UINT getVarMaxTimesyncLogSize()
    {
        return varMaxTimesyncLogSize;
    }

    public void setVarMaxTimesyncLogSize(UINT varMaxTimesyncLogSize)
    {
        this.varMaxTimesyncLogSize = varMaxTimesyncLogSize;
    }

    public String toString()
    {
        StringBuffer sb = new StringBuffer();

		sb.append("CLASS["+this.getClass().getName()+"]\n");
		sb.append("varValueMask: " + varValueMask + "\n");
		sb.append("varAutoResetCheckInterval: " + varAutoResetCheckInterval + "\n");
		sb.append("varSysPowerOffDelay: " + varSysPowerOffDelay + "\n");
		sb.append("varSysTempMonInterval: " + varSysTempMonInterval + "\n");
		sb.append("varAutoTimeSyncInterval: " + varAutoTimeSyncInterval + "\n");
		sb.append("varSysMeteringThreadCount: " + varSysMeteringThreadCount + "\n");
		sb.append("varSinkPollingInterval: " + varSinkPollingInterval + "\n");
		sb.append("varSinkResetInterval: " + varSinkResetInterval + "\n");
		sb.append("varSinkResetDelay: " + varSinkResetDelay + "\n");
		sb.append("varSinkLedTurnOffInterval: " + varSinkLedTurnOffInterval + "\n");
		sb.append("varSinkAckWaitTime: " + varSinkAckWaitTime + "\n");
		sb.append("varSensorTimeout: " + varSensorTimeout + "\n");
		sb.append("varSensorKeepalive: " + varSensorKeepalive + "\n");
		sb.append("varSensorMeterSaveCount: " + varSensorMeterSaveCount + "\n");
		sb.append("varMeterDayMask: " + varMeterDayMask + "\n");
		sb.append("varMeterHourMask: " + varMeterHourMask + "\n");
		sb.append("varMeterStartMin: " + varMeterStartMin + "\n");
		sb.append("varRecoveryDayMask: " + varRecoveryDayMask + "\n");
		sb.append("varRecoveryHourMask: " + varRecoveryHourMask + "\n");
		sb.append("varRecoveryStartMin: " + varRecoveryStartMin + "\n");
		sb.append("varCmdHistSaveDay: " + varCmdHistSaveDay + "\n");
		sb.append("varEventLogSaveDay: " + varEventLogSaveDay + "\n");
		sb.append("varCommLogSaveDay: " + varCommLogSaveDay + "\n");
		sb.append("varMeterLogSaveDay: " + varMeterLogSaveDay + "\n");
		sb.append("varAutoResetTime: " + varAutoResetTime + "\n");
		sb.append("varMeterUploadCycleType: " + varMeterUploadCycleType + "\n");
		sb.append("varMeterUploadCycle: " + varMeterUploadCycle + "\n");
		sb.append("varMeterUploadStartHour: " + varMeterUploadStartHour + "\n");
		sb.append("varMeterUploadStartMin: " + varMeterUploadStartMin + "\n");
		sb.append("varMeterUploadRetry: " + varMeterUploadRetry + "\n");
		sb.append("varMeterIssueDate: " + varMeterIssueDate + "\n");
		sb.append("varMemoryCriticalRate: " + varMemoryCriticalRate + "\n");
		sb.append("varFlashCriticalRate: " + varFlashCriticalRate + "\n");
		sb.append("varNapcGroupInterval: " + varNapcGroupInterval + "\n");
		sb.append("varNapcRetry: " + varNapcRetry + "\n");
		sb.append("varNapcRetryHour: " + varNapcRetryHour + "\n");
		sb.append("varNapcRetryStartSecond: " + varNapcRetryStartSecond + "\n");
		sb.append("varNapcRetryClear: " + varNapcRetryClear + "\n");
		sb.append("varMaxEventLogSize: " + varMaxEventLogSize + "\n");
		sb.append("varMaxAlarmLogSize: " + varMaxAlarmLogSize + "\n");
		sb.append("varMaxCmdLogSize: " + varMaxCmdLogSize + "\n");
		sb.append("varMaxCommLogSize: " + varMaxCommLogSize + "\n");
		sb.append("varMaxMobileLogSize: " + varMaxMobileLogSize + "\n");
		sb.append("varKeepaliveInterval: " + varKeepaliveInterval + "\n");
		sb.append("varAlarmLogSaveDay: " + varAlarmLogSaveDay + "\n");
		sb.append("varTimeBroadcastInterval: " + varTimeBroadcastInterval + "\n");
		sb.append("varStatusMonitorTime: " + varStatusMonitorTime + "\n");
		sb.append("varUploadTryTime: " + varUploadTryTime + "\n");
		sb.append("varDataSaveDay: " + varDataSaveDay + "\n");
		sb.append("varMeteringPeriod: " + varMeteringPeriod + "\n");
		sb.append("varRecoveryPeriod: " + varRecoveryPeriod + "\n");
		sb.append("varMeteringRetry: " + varMeteringRetry + "\n");
		sb.append("varRecoveryRetry: " + varRecoveryRetry + "\n");
		sb.append("varCheckDayMask: " + varCheckDayMask + "\n");
		sb.append("varCheckHourMask: " + varCheckHourMask + "\n");
		sb.append("varCheckStartMin: " + varCheckStartMin + "\n");
		sb.append("varCheckPeriod: " + varCheckPeriod + "\n");
		sb.append("varCheckRetry: " + varCheckRetry + "\n");
		sb.append("varMeterTimesyncDayMask: " + varMeterTimesyncDayMask + "\n");
		sb.append("varMeterTimesyncHourMask: " + varMeterTimesyncHourMask + "\n");
		sb.append("varMeterReadingInterval: " + varMeterReadingInterval + "\n");
		sb.append("varHeaterOnTemp: " + varHeaterOnTemp + "\n");
		sb.append("varHeaterOffTemp: " + varHeaterOffTemp + "\n");
		sb.append("varMobileLiveCheckInterval: " + varMobileLiveCheckInterval + "\n");
		sb.append("varEventReadDayMask: " + varEventReadDayMask + "\n");
		sb.append("varEventReadHourMask: " + varEventReadHourMask + "\n");
		sb.append("varEventSendDelay: " + varEventSendDelay + "\n");
		sb.append("varEventAlertLevel: " + varEventAlertLevel + "\n");
		sb.append("varSensorLimit: " + varSensorLimit + "\n");
		sb.append("varMeteringStrategy: " + varMeteringStrategy + "\n");
		sb.append("varTimesyncThreshold: " + varTimesyncThreshold + "\n");
		sb.append("varMobileLiveCheckMethod: " + varMobileLiveCheckMethod + "\n");
		sb.append("varScanningStrategy: " + varScanningStrategy + "\n");
		sb.append("varMobileLogSaveDay: " + varMobileLogSaveDay + "\n");
		sb.append("varUpgradeLogSaveDay: " + varUpgradeLogSaveDay + "\n");
		sb.append("varUploadLogSaveDay: " + varUploadLogSaveDay + "\n");
		sb.append("varTimesyncLogSaveDay: " + varTimesyncLogSaveDay + "\n");
		sb.append("varMaxMeterLogSize: " + varMaxMeterLogSize + "\n");
		sb.append("varMaxUpgradeLogSize: " + varMaxUpgradeLogSize + "\n");
		sb.append("varMaxUploadLogSize: " + varMaxUploadLogSize + "\n");
		sb.append("varMaxTimesyncLogSize: " + varMaxTimesyncLogSize + "\n");
		sb.append(']');

        return sb.toString();
    }
}
