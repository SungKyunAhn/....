<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:int="http://www.springframework.org/schema/integration"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/integration
        http://www.springframework.org/schema/integration/spring-integration.xsd
        ">
        
  <context:property-placeholder location="classpath:config/fmp.properties" order="1" ignore-unresolvable="true"/>
  <context:property-placeholder location="classpath:config/fmp_queue.properties" order="3" ignore-unresolvable="true"/>

  <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
  <!-- Necessary to get the entity manager injected into the factory bean -->
  <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
  
  <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
  <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
    <property name="entityManagerFactory" ref="entityManagerFactory"/>
  </bean>
  
  <bean id="sessionContextFactory" class="org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean">
    <property name="targetBeanName" value="sessionContext" />
  </bean>
    
  <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />
    
  <!-- Enable @Transactional support -->
  <tx:annotation-driven transaction-manager="transactionManager" />
    
  <!-- Activates scanning of @Autowired -->            
  <context:annotation-config/>
    
  <!--  MBeans Server
  <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean"/>
    
   this bean needs to be eagerly pre-instantiated in order for the exporting to occur;
   this means that it must not be marked as lazily initialized
    
  <bean id="mbeanExporter" class="org.springframework.jmx.export.MBeanExporter">
    <property name="server" ref="mbeanServer"/>
  </bean>
    
  <bean id="registry" class="org.springframework.remoting.rmi.RmiRegistryFactoryBean">
    <property name="port" value="${jmxrmi.server.port}"/>
  </bean>
   -->
     
  <!-- 
  <bean id="serverConnector" class="org.springframework.jmx.support.ConnectorServerFactoryBean">
    <property name="server" ref="mbeanServer"/>
    <property name="objectName" value="connector:name=rmi"/>
    <property name="serviceUrl" value="service:jmx:rmi://localhost/jndi/rmi://127.0.0.1:2199/server"/>
  </bean>
  -->
    
  <!-- 이벤트 알람을 Topic으로 사용하지 않고 Queue로 변경한다. Topic이 ActiveMQ MBean 브라우저 -->
  <bean id="eventTopic" class="org.apache.activemq.command.ActiveMQTopic">
    <constructor-arg value="AiMiR.Event"/>
  </bean>
    
  <bean id="activeMQConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
    <property name="brokerURL" value="${activemq.broker.url}" />
    <property name="trustAllPackages" value="true"/>
  </bean>

  <bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
    <property name="connectionFactory" ref="activeMQConnectionFactory"/>
  </bean>
  
  <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
    <property name="configuration" ref="jmsConfig"/>
  </bean>

  <bean id="activeCachingConnectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">
    <property name="targetConnectionFactory" ref="activeMQConnectionFactory"/>
    <property name="reconnectOnException" value="true"/>
  </bean>

  <bean id="activeJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
    <property name="connectionFactory" ref="activeCachingConnectionFactory"/>
    <property name="explicitQosEnabled" value="true"/>
    <property name="timeToLive" value="0"/>
  </bean>
    
</beans>
